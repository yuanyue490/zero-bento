---
import Layout from "../../layouts/Layout.astro";

// 定义设计作品图片数据
const designImages = [
  {
    id: "design1",
    title: "森鸟 logo",
    src: "/images/design/森鸟 logo-平面.png",
    category: "平面设计"
  },
  {
    id: "design2",
    title: "物流大屏", 
    src: "/images/design/物流大屏-可视化.png",
    category: "可视化"
  },
  {
    id: "design3",
    title: "Soul",
    src: "/images/design/soul-三维.jpg",
    category: "三维设计"
  },
  {
    id: "design4",
    title: "拟物化系列",
    src: "/images/design/拟物化系列-UI.png",
    category: "UI设计"
  },
  {
    id: "design5",
    title: "异星探索",
    src: "/images/design/异星探索-三维.jpg",
    category: "三维设计"
  },
  {
    id: "design6",
    title: "灵感APP",
    src: "/images/design/灵感APP-UI.png",
    category: "UI设计"
  },
  {
    id: "design7",
    title: "智慧厕所导视",
    src: "/images/design/智慧厕所导视-可视化.jpg",
    category: "可视化"
  },
  {
    id: "design8",
    title: "研发大楼可视化",
    src: "/images/design/研发大楼可视化-可视化.png",
    category: "可视化"
  },
  {
    id: "design9",
    title: "智慧厕所A",
    src: "/images/design/智慧厕所A -可视化.jpg",
    category: "可视化"
  },
  {
    id: "design10",
    title: "智慧厕所B",
    src: "/images/design/智慧厕所B-可视化.png",
    category: "可视化"
  },
  {
    id: "design11",
    title: "颜料水母",
    src: "/images/design/颜料水母-三维.jpg",
    category: "三维设计"
  },
  {
    id: "design12",
    title: "拟物卡通",
    src: "/images/design/拟物卡通-UI.png",
    category: "UI设计"
  },
  {
    id: "design13",
    title: "异星洞窟",
    src: "/images/design/异星洞窟-三维.jpg",
    category: "三维设计"
  },
  {
    id: "design14",
    title: "Q版头像",
    src: "/images/design/Q版头像-插画.jpg",
    category: "插画"
  },
  {
    id: "design15",
    title: "疯狂动物园",
    src: "/images/design/疯狂动物园-插画.jpg",
    category: "插画"
  }
];

// 获取所有唯一的分类
const categories = [...new Set(designImages.map(project => project.category))];
---

<script>
  // 检查是否在浏览器环境中
  const isBrowser = typeof window !== 'undefined';

  if (isBrowser) {
    // 使用纯CSS控制loader动画，不依赖motion库
    document.addEventListener('DOMContentLoaded', () => {
      const loader = document.querySelector('.loader');
      if (loader) {
        setTimeout(() => {
          loader.classList.add('fade-out');
          setTimeout(() => {
            (loader as HTMLElement).style.display = 'none';
          }, 500);
        }, 300);
      }
    });
  }
</script>

<Layout
  title="Zero Yue - 设计作品"
  description="视觉设计作品展示"
>
  <main class="w-screen min-h-screen flex flex-col justify-start items-start max-w-6xl mx-auto p-4 md:p-6">
    <a
      href="/"
      class="text-white bg-neutral-900 hover:bg-neutral-800 px-4 py-2 mb-8 border-1 border-solid border-neutral-600 rounded-lg transition-colors duration-200"
    >
      返回首页
    </a>
    
    <div class="w-full mb-10">
      <h1 class="text-4xl font-bold mb-3 text-neutral-100">设计作品</h1>
      <p class="text-neutral-400">
        精选视觉设计作品集
      </p>
    </div>
    
    <!-- 分类筛选 -->
    <div class="w-full flex flex-wrap gap-3 mb-8">
      <button class="active-filter px-4 py-2 bg-blue-600 text-white rounded-full text-sm" data-category="all">全部</button>
      {categories.map(category => (
        <button class="filter-btn px-4 py-2 bg-neutral-800 text-neutral-300 hover:bg-neutral-700 rounded-full text-sm" data-category={category}>
          {category}
        </button>
      ))}
    </div>
    
    <!-- 设计图片网格 -->
    <div class="w-full grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 md:gap-6">
      {
        designImages.map(image => (
          <div class="design-image-container group" data-category={image.category}>
            <div 
              class="view-image block w-full cursor-pointer overflow-hidden bg-neutral-800 rounded-lg aspect-[4/3] relative group"
              data-src={image.src}
              data-title={image.title}
            >
              <img 
                src={image.src} 
                alt={image.title} 
                class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                loading="lazy"
              />
              <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300 flex items-center justify-center">
                <div class="opacity-0 group-hover:opacity-100 transform translate-y-4 group-hover:translate-y-0 transition-all duration-300">
                  <span class="text-white font-medium px-4 py-2 rounded-full bg-black bg-opacity-60">
                    查看大图
                  </span>
                </div>
              </div>
            </div>
            <div class="flex justify-between items-center mt-2">
              <p class="text-white text-sm font-medium">{image.title}</p>
              <p class="text-neutral-400 text-xs">{image.category}</p>
            </div>
          </div>
        ))
      }
    </div>
  </main>
  
  <!-- 轻量级图片查看器 -->
  <div id="image-viewer" class="fixed inset-0 z-50 bg-black/90 opacity-0 pointer-events-none transition-opacity duration-300 flex flex-col items-center justify-center">
    <button id="close-viewer" class="absolute top-4 right-4 text-white hover:text-gray-300 text-4xl">&times;</button>
    <div class="relative max-w-4xl max-h-[85vh] p-4">
      <img id="viewed-image" src="" alt="" class="max-w-full max-h-[85vh] object-contain" />
      <p id="image-title" class="text-white text-center mt-2 font-medium"></p>
    </div>
  </div>
</Layout>

<style>
  .loader {
    opacity: 1;
    transition: opacity 0.5s ease-out;
  }
  .loader.fade-out {
    opacity: 0;
    pointer-events: none;
  }
</style>

<script>
  // 检查是否在浏览器环境中
  if (typeof window !== 'undefined') {
    // 图片查看功能
    document.addEventListener('DOMContentLoaded', () => {
      const viewer = document.getElementById('image-viewer');
      const viewedImage = document.getElementById('viewed-image');
      const imageTitle = document.getElementById('image-title');
      const closeBtn = document.getElementById('close-viewer');
      const imageItems = document.querySelectorAll('.view-image');
      
      // 打开图片查看器
      imageItems.forEach(item => {
        item.addEventListener('click', () => {
          const src = item.getAttribute('data-src');
          const title = item.getAttribute('data-title');
          
          if (viewedImage && src) {
            viewedImage.setAttribute('src', src);
            
            if (imageTitle && title) {
              imageTitle.textContent = title;
            }
            
            if (viewer) {
              viewer.style.opacity = '1';
              viewer.style.pointerEvents = 'auto';
              document.body.style.overflow = 'hidden'; // 防止背景滚动
            }
          }
        });
      });
      
      // 关闭图片查看器
      if (closeBtn) {
        closeBtn.addEventListener('click', () => {
          if (viewer) {
            viewer.style.opacity = '0';
            viewer.style.pointerEvents = 'none';
            document.body.style.overflow = ''; // 恢复背景滚动
          }
        });
      }
      
      // 点击背景也可以关闭
      if (viewer) {
        viewer.addEventListener('click', (e) => {
          if (e.target === viewer) {
            viewer.style.opacity = '0';
            viewer.style.pointerEvents = 'none';
            document.body.style.overflow = '';
          }
        });
      }
      
      // ESC键关闭
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && viewer && viewer.style.opacity === '1') {
          viewer.style.opacity = '0';
          viewer.style.pointerEvents = 'none';
          document.body.style.overflow = '';
        }
      });
    });

    // 分类筛选功能
    document.addEventListener('DOMContentLoaded', () => {
      try {
        const filterButtons = document.querySelectorAll('.filter-btn');
        const allButton = document.querySelector('.active-filter');
        const designItems = document.querySelectorAll('.design-image-container');
        
        console.log('筛选按钮数量:', filterButtons.length);
        console.log('设计项目数量:', designItems.length);
        
        // 点击全部按钮
        allButton?.addEventListener('click', () => {
          allButton.classList.add('bg-blue-600', 'text-white');
          allButton.classList.remove('bg-neutral-800', 'text-neutral-300');
          
          filterButtons.forEach(btn => {
            btn.classList.remove('bg-blue-600', 'text-white');
            btn.classList.add('bg-neutral-800', 'text-neutral-300');
          });
          
          designItems.forEach(item => {
            (item as HTMLElement).style.display = '';
          });
        });
        
        // 点击分类按钮
        filterButtons.forEach(button => {
          button.addEventListener('click', () => {
            const category = button.getAttribute('data-category');
            console.log('选择类别:', category);
            
            // 更新按钮样式
            allButton?.classList.remove('bg-blue-600', 'text-white');
            allButton?.classList.add('bg-neutral-800', 'text-neutral-300');
            
            filterButtons.forEach(btn => {
              if (btn === button) {
                btn.classList.add('bg-blue-600', 'text-white');
                btn.classList.remove('bg-neutral-800', 'text-neutral-300');
              } else {
                btn.classList.remove('bg-blue-600', 'text-white');
                btn.classList.add('bg-neutral-800', 'text-neutral-300');
              }
            });
            
            // 筛选项目
            designItems.forEach(item => {
              const itemCategory = item.getAttribute('data-category');
              console.log('项目类别:', itemCategory);
              
              if (category === itemCategory) {
                (item as HTMLElement).style.display = '';
              } else {
                (item as HTMLElement).style.display = 'none';
              }
            });
          });
        });
      } catch (error) {
        console.error('筛选功能初始化错误:', error);
      }
    });
  }
</script> 