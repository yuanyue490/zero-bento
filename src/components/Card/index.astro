---
import { Icon } from "astro-icon/components";
import Content from "./Content.astro";

interface Props {
  title?: string;
  body?: string;
  colSpan?: string;
  rowSpan?: string;
  href?: string;
  colorText?: string;
  height?: string;
  width?: string;
  bgColor?: string;
  gradientFrom?: string;
  gradientTo?: string;
  gradientDir?: string;
}

const { 
  title, 
  body, 
  colSpan, 
  rowSpan, 
  href, 
  colorText, 
  height,
  bgColor, 
  gradientFrom, 
  gradientTo, 
  gradientDir = "br" 
} = Astro.props;

let bgClass = "bg-darkslate-500";

if (gradientFrom && gradientTo) {
  bgClass = `bg-gradient-to-${gradientDir} from-${gradientFrom} to-${gradientTo}`;
  console.log("应用渐变背景:", bgClass);
} else if (bgColor) {
  bgClass = `bg-${bgColor}`;
  console.log("应用单色背景:", bgClass);
}
---

<div
  class={`card flex flex-col h-max sm:h-auto group overflow-hidden transform-y-[-40%] ${bgClass} shadow-lg rounded-lg p-6 border border-darkslate-100 hover:border-primary-500 align-start flex-none ${
    height || "h-full"
  } justify-start relative transform perspective-1200 w-full transition duration-75 ease-in-out col-span-1 ${
    colSpan || "md:col-span-2"
  } ${rowSpan || ""}`}
>
  {
    href ? (
      <a href={href} class={`h-full w-full ${colorText || ""}`}>
        <Icon
          name="ri:arrow-right-up-line"
          class="h-6 float-right group-hover:text-primary-500 group-hover:translate-x-1 group-hover:-translate-y-1 transition-transform ease-in-out duration-100 z-20"
        />
        <Content title={title} body={body}>
          <slot />
        </Content>
      </a>
    ) : (
      <Content title={title} body={body}>
        <slot />
      </Content>
    )
  }
</div>
